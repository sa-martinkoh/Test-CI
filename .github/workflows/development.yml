name: Deployment

on:
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        required: true
        options:
        - Shareable Asset
        - Liberty
      tag:
        description: 'Tag for main branch'

jobs:
  print:
    name: Deploying branch '${{ github.ref_name }}' for ${{ github.event.inputs.platform }}
    runs-on: ubuntu-latest
    steps:
    - run: echo Deploying branch '${{ github.ref_name }}' for ${{ github.event.inputs.platform }}

  check:
    needs: print
    name: Check Deploy Environment
    runs-on: ubuntu-latest
    outputs:
      deploy-environment: ${{ steps.check-deploy-environment.outputs.environment }}
    steps:
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v5

    - id: check-deploy-environment
      run: |
        if [[ "${{ steps.branch-name.outputs.current_branch }}" =~ ^feature/.* ]]
        then
          echo "::set-output name=environment::develop"
        elif [[ "${{ steps.branch-name.outputs.current_branch }}" == 'develop' ]]
        then
          echo "::set-output name=environment::develop"
        elif [[ "${{ steps.branch-name.outputs.current_branch }}" =~ ^release/.* ]]
        then
          echo "::set-output name=environment::staging"
        elif [[ "${{ steps.branch-name.outputs.current_branch }}" == 'main' ]]
        then
          echo "::set-output name=environment::production"
        else
          echo "::set-output name=environment::none"
        fi

  create-tag:
    needs: check
    name: Creating tag ${{ github.event.inputs.tag }} for 'main' branch
    runs-on: ubuntu-latest
    outputs:
      deploy-ref: ${{ steps.check-and-create.outputs.deploy-ref }}
      deploy-environment: ${{ needs.check.outputs.deploy-environment }}
    steps:
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v5

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - id: check-and-create
      run:  |
        if [[ '${{ github.ref_name }}' != 'main' ]]
        then
          echo "skipping create tag for '${{ github.ref_name }}' branch"
          echo "::set-output name=deploy-ref::${{ steps.branch-name.outputs.current_branch }}"
        if [[ -z '${{ github.event.inputs.tag }}' ]]
        then
          echo "no tag provided for 'main' branch"
          exit 1
        if git rev-parse -q --verify "refs/tags/${{ github.event.inputs.tag }}" >/dev/null;
        then
          echo "tag '${{ github.event.inputs.tag }}' already exists"
          echo "::set-output name=deploy-ref::${{ github.event.inputs.tag }}"
        else
          echo Creating tag '${{ github.event.inputs.tag }}'
          git tag '${{ github.event.inputs.tag }}'
          git push origin '${{ github.event.inputs.tag }}'
          echo "::set-output name=deploy-ref::${{ github.event.inputs.tag }}"
        fi

  build:
    needs: create-tag
    name: Building branch '${{ github.ref_name }}'
    runs-on: ubuntu-latest
    if: needs.create-tag.outputs.deploy-environment != 'none'
    outputs:
      deploy-environment: ${{ needs.create-tag.outputs.deploy-environment }}
    steps:
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v5

    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ needs.create-tag.outputs.deploy-ref }}

    - name: Building branch ${{ steps.branch-name.outputs.current_branch }}
      id: building
      run: |
        echo "Building branch ${{ steps.branch-name.outputs.current_branch }}"


  deploy-nonprod:
    needs: build
    name: Deploy to ${{ needs.build.outputs.deploy-environment }}
    runs-on: ubuntu-latest
    if: needs.build.outputs.deploy-environment != 'none' && needs.build.outputs.deploy-environment != 'production'

    steps:
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v5

    - name: Deploying branch ${{ steps.branch-name.outputs.current_branch }} to ${{ needs.build.outputs.deploy-environment }}
      run: |
        echo "Deploying branch ${{ steps.branch-name.outputs.current_branch }} to ${{ needs.build.outputs.deploy-environment }}"


  deploy-prod:
    needs: build
    name: Deploy to ${{ needs.build.outputs.deploy-environment }}
    runs-on: ubuntu-latest
    if: needs.build.outputs.deploy-environment == 'production'
    environment: production

    steps:
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v5

    - name: Deploying branch ${{ steps.branch-name.outputs.current_branch }} to ${{ needs.build.outputs.deploy-environment }}
      run: |
        echo "Deploying branch ${{ steps.branch-name.outputs.current_branch }} to ${{ needs.build.outputs.deploy-environment }}"
